h1,
h2,
p {
    text-align: center;
}

body {
    padding: 20px;
    font-family: sans-serif;
    background-image: url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg);
}

h1 {
    font-size: 40px;
    margin-top: 0;
    margin-bottom: 15px;
}

h2 {
    font-size: 30px;
}

.established {
    font-style: italic;
}

.menu {
    width: 80%;
    /* 80% the width of parent element (body)*/
    max-width: 500px;
    /* Prevent the items from being too far from their prices if the screen size is very wide.*/
    background-color: burlywood;
    margin-left: auto;
    margin-right: auto;
    /* Center #menu horizontally*/
    padding: 20px;
}

img {
    display: block;
    margin-left: auto;
    margin-right: auto;
    margin-top: -25px;
}

hr {
    height: 2px;
    background-color: brown;
    border-color: brown;
}

h1,
h2 {
    font-family: Impact, serif;
    /* You can add a fallback value for the font-family by adding another font name separated by a comma.*/
}

.flavor,
.dessert {
    text-align: left;
    width: 50%;
    /* Inline-block elements only take up the width of their content. To spread them out, add a width property to the flavor and price class selectors that have a value of 50% each.*/
}

.price {
    text-align: right;
    width: 50%
}

.item p {
    display: inline-block;
    /* p elements are block level. Add display inline-blick so they behave like inline elements (on same line)*/
    margin-top: 5px;
    margin-bottom: 5px;
    font-size: 18px;
}

.bottom-line {
    margin-top: 25px;
}

/*FOOTER*/

footer {
    font-size: 14px;
}

a {
    color: black;
    /* To make the footer links the same color regardless if a link has been visited, use a type selector for the anchor element (a) and use the value black for the color property.*/
}

a:visited {
    color: black;
    /* Specify custom color*/
}

a:hover {
    color: brown;
}

a:active {
    color: brown;
}

.address {
    margin-bottom: 5px;
}